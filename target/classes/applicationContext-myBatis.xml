<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/util 
       http://www.springframework.org/schema/util/spring-util-4.0.xsd
       http://www.springframework.org/schema/mvc 
       http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
">
	<!-- 引入数据的db资源文件 -->
	<bean class="com.finance.core.des.EncryptPropertyPlaceholderConfigurer"
		p:location="classpath:db.properties" p:fileEncoding="UTF-8" />
	
	<!--数据库连接-->
    <bean id="dataSource" name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 指定连接数据库的驱动-->
	    <property name="driverClass" value="${driver}"/>
	    <!-- 指定连接数据库的URL-->
	    <property name="jdbcUrl" value="${url}"/>
	    <!-- 指定连接数据库的用户名-->
	    <property name="user" value="${username}"/>
	    <!-- 指定连接数据库的密码-->
	    <property name="password" value="${password}"/>
	    <!-- 指定连接池中保留的最大连接数. Default:15-->
	    <property name="maxPoolSize" value="100"/>
	    <!-- 指定连接池中保留的最小连接数-->
	    <property name="minPoolSize" value="10"/>
	    <!-- 指定连接池的初始化连接数  取值应在minPoolSize 与 maxPoolSize 之间.Default:3-->
	    <property name="initialPoolSize" value="20"/>
	    <!-- 最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。 Default:0-->
	    <property name="maxIdleTime" value="600"/>
	    <!-- 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数. Default:3-->
	    <property name="acquireIncrement" value="5"/>
	    <!-- JDBC的标准,用以控制数据源内加载的PreparedStatements数量。
	           但由于预缓存的statements属于单个connection而不是整个连接池所以设置这个参数需要考虑到多方面的因数.
	           如果maxStatements与maxStatementsPerConnection均为0,则缓存被关闭。Default:0-->
	    <property name="maxStatements" value="5"/>
	    <!-- 每60秒检查所有连接池中的空闲连接.Default:0 -->
	    <property name="idleConnectionTestPeriod" value="60"/>
	</bean>

	<!-- 配置mybatis的sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mappers.xml文件 -->
		<property name="mapperLocations" value="classpath:mappers/*.xml"></property>
 		<!-- mybatis配置文件 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>

	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.finance.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 配置事务通知属性 -->  
    <tx:advice id="txAdvice" transaction-manager="transactionManager">  
        <!-- 定义事务传播属性        
        
                             原理：spring aop ; 异常捕获原理：
                             被拦截的方法需显式抛出异常，并不能经任何处理，这样aop代理才能捕获到方法的异常，才能进行回滚，默认情况下aop只捕获runtimeexception的异常
                             但可以通过<tx:method name="upd*" propagation="REQUIRED" rollback-for="java.lang.Exception/>配置来捕获特定的异常并回滚   
                             
           throw new Exception("ces"); 默认不会回滚
           throw new RuntimeException("ces");默认回滚
        
         -->  
        <tx:attributes>  
            <tx:method name="insert*" propagation="REQUIRED" />  
            <tx:method name="update*" propagation="REQUIRED" />  
            <tx:method name="edit*" propagation="REQUIRED" />  
            <tx:method name="save*" propagation="REQUIRED" />  
            <tx:method name="add*" propagation="REQUIRED" />  
            <tx:method name="new*" propagation="REQUIRED" />  
            <tx:method name="set*" propagation="REQUIRED" />
            <tx:method name="remove*" propagation="REQUIRED" />
            <tx:method name="delete*" propagation="REQUIRED" />  
            <tx:method name="change*" propagation="REQUIRED" />  
            <tx:method name="check*" propagation="REQUIRED" />  
            <tx:method name="get*" propagation="REQUIRED" read-only="true" />  
            <tx:method name="find*" propagation="REQUIRED" read-only="true" />  
            <tx:method name="load*" propagation="REQUIRED" read-only="true" />  
            <tx:method name="*" propagation="REQUIRED" read-only="true" />  
            <tx:method name="truncate*" propagation="REQUIRED" />
        </tx:attributes>  
    </tx:advice>  
  
    <!-- 配置事务切面 -->  
    <aop:config>  
        <aop:pointcut id="serviceOperation" expression="execution(* com.finance.service..*.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation" />  
    </aop:config>
 
</beans>